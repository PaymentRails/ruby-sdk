=begin
#Payment Rails API

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.30.12

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::RecipientsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RecipientsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::RecipientsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RecipientsApi' do
    it 'should create an instact of RecipientsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::RecipientsApi)
    end
  end

  # unit tests for create
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [RecipientPost] :body 
  # @return [Recipient]
  describe 'create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # 
  # Delete multiple recipients
  # @param [Hash] opts the optional parameters
  # @option opts [Ids] :ids an array of valid recipient&#39;s id
  # @return [nil]
  describe 'delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for export_csv
  # 
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page page number default 1
  # @option opts [Integer] :page_size page size default 100
  # @option opts [String] :start_date filter recipients list by creation date from start date format YYYY-MM-DD
  # @option opts [String] :end_date filter recipients list by creation date to end date format YYYY-MM-DD
  # @option opts [String] :status filter recipients list by status
  # @option opts [String] :compliance_status filter recipients list by compliance status
  # @option opts [String] :payout_method filter recipients list by payout methods
  # @option opts [String] :payout_currency filter recipients list by payout currency 3 letters ISO code
  # @option opts [String] :country filter recipients list by country
  # @return [nil]
  describe 'export_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for query
  # 
  # Return recipients
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page page number default 1
  # @option opts [Integer] :page_size page size default 100
  # @option opts [String] :start_date filter recipients list by creation date from start date format YYYY-MM-DD
  # @option opts [String] :end_date filter recipients list by creation date to end date format YYYY-MM-DD
  # @option opts [String] :status filter recipients list by status multiple values separated by coma
  # @option opts [String] :compliance_status filter recipients list by compliance status multiple values separated by comas
  # @option opts [String] :payout_method filter recipients list by payout methods multiple values separated by comas
  # @option opts [String] :payout_currency filter recipients list by payout currency 3 letters ISO code, multiple values separated by comas
  # @option opts [String] :country filter recipients list by country multiple values separated by comas
  # @return [Object]
  describe 'query test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_csv
  # 
  # 
  # @param file the csv file
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'upload_csv test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
