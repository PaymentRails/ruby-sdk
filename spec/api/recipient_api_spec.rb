=begin
#Payment Rails API

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.30.12

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::RecipientApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RecipientApi' do
  before do
    # run before each test
    @instance = SwaggerClient::RecipientApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RecipientApi' do
    it 'should create an instact of RecipientApi' do
      expect(@instance).to be_instance_of(SwaggerClient::RecipientApi)
    end
  end

  # unit tests for creat_paypal_account
  # 
  # create paypal account
  # @param recipient_id 
  # @param body paypal payout account
  # @param [Hash] opts the optional parameters
  # @return [PaypalAccount]
  describe 'creat_paypal_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_bank_account
  # 
  # create bank account
  # @param recipient_id 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [BankAccount]
  describe 'create_bank_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_payout_methods
  # 
  # create recipient payout methods
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RecipientPayoutMethods]
  describe 'create_payout_methods test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @return [Recipient]
  describe 'get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bank_account
  # 
  # create bank account
  # @param recipient_id 
  # @param [Hash] opts the optional parameters
  # @return [BankAccount]
  describe 'get_bank_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_compliance_checks
  # 
  # 
  # @param recipient_id 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'get_compliance_checks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_info
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @return [RecipientInfoOut]
  describe 'get_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_logs
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'get_logs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payments
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page set page number default 1
  # @option opts [Integer] :page_size set page size default 100
  # @option opts [String] :status filter recipient payment by status
  # @option opts [String] :start_date filter recipient payment creation date from date
  # @option opts [String] :end_date filter recipient payment creation date to date
  # @option opts [String] :source_currency filter recipient payments by source currency, 3 letters ISO code
  # @option opts [String] :search search payments using key words, payment ids, names
  # @return [InlineResponse2004]
  describe 'get_payments test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_payout_methods
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @return [RecipientPayoutMethods]
  describe 'get_payout_methods test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_paypal_account
  # 
  # get paypal account for recipient
  # @param recipient_id 
  # @param [Hash] opts the optional parameters
  # @return [PaypalAccount]
  describe 'get_paypal_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param [Hash] opts the optional parameters
  # @option opts [RecipientPost] :body 
  # @return [Recipient]
  describe 'update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_bank_account
  # 
  # create bank account
  # @param recipient_id 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [BankAccount]
  describe 'update_bank_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_info
  # 
  # 
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RecipientInfoOut]
  describe 'update_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_payout_methods
  # 
  # create recipient payout methods
  # @param recipient_id R-XXXXXXXXXXXXXXXX
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [RecipientPayoutMethods]
  describe 'update_payout_methods test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_paypal_account
  # 
  # create paypal account
  # @param recipient_id 
  # @param body paypal payout account
  # @param [Hash] opts the optional parameters
  # @return [PaypalAccount]
  describe 'update_paypal_account test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
