=begin
#Payment Rails API

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.30.12

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module SwaggerClient
  class PaymentsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page page number default 1
    # @option opts [Integer] :page_size page size default 100
    # @option opts [String] :start_date filter recipients list by creation date from start date format YYYY-MM-DD
    # @option opts [String] :end_date filter recipients list by creation date to end date format YYYY-MM-DD
    # @option opts [String] :status filter recipients list by status
    # @option opts [String] :country filter by 2 letter country code
    # @option opts [String] :recipient filter by recipient ID R-XXXXXXXXXXXXXXXX
    # @option opts [String] :source_currency filter by source currency 3 letters ISO code
    # @option opts [String] :target_currency filter by target currency 3 letters ISO code
    # @return [InlineResponse2001]
    def query(opts = {})
      data, _status_code, _headers = query_with_http_info(opts)
      return data
    end

    # 
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page page number default 1
    # @option opts [Integer] :page_size page size default 100
    # @option opts [String] :start_date filter recipients list by creation date from start date format YYYY-MM-DD
    # @option opts [String] :end_date filter recipients list by creation date to end date format YYYY-MM-DD
    # @option opts [String] :status filter recipients list by status
    # @option opts [String] :country filter by 2 letter country code
    # @option opts [String] :recipient filter by recipient ID R-XXXXXXXXXXXXXXXX
    # @option opts [String] :source_currency filter by source currency 3 letters ISO code
    # @option opts [String] :target_currency filter by target currency 3 letters ISO code
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def query_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PaymentsApi.query ..."
      end
      # resource path
      local_var_path = "/v1/payments".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'startDate'] = opts[:'start_date'] if !opts[:'start_date'].nil?
      query_params[:'endDate'] = opts[:'end_date'] if !opts[:'end_date'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'country'] = opts[:'country'] if !opts[:'country'].nil?
      query_params[:'recipient'] = opts[:'recipient'] if !opts[:'recipient'].nil?
      query_params[:'sourceCurrency'] = opts[:'source_currency'] if !opts[:'source_currency'].nil?
      query_params[:'targetCurrency'] = opts[:'target_currency'] if !opts[:'target_currency'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = []
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['merchantKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PaymentsApi#query\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param payment_id P-XXXXXXXXXXXXXXXX
    # @param [Hash] opts the optional parameters
    # @return [PaymentOut]
    def v1_payments_payment_id_get(payment_id, opts = {})
      data, _status_code, _headers = v1_payments_payment_id_get_with_http_info(payment_id, opts)
      return data
    end

    # 
    # 
    # @param payment_id P-XXXXXXXXXXXXXXXX
    # @param [Hash] opts the optional parameters
    # @return [Array<(PaymentOut, Fixnum, Hash)>] PaymentOut data, response status code and response headers
    def v1_payments_payment_id_get_with_http_info(payment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PaymentsApi.v1_payments_payment_id_get ..."
      end
      # verify the required parameter 'payment_id' is set
      fail ArgumentError, "Missing the required parameter 'payment_id' when calling PaymentsApi.v1_payments_payment_id_get" if payment_id.nil?
      # resource path
      local_var_path = "/v1/payments/{paymentId}".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'paymentId'] = payment_id

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = []
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['merchantKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PaymentOut')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PaymentsApi#v1_payments_payment_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
